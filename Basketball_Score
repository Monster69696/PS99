-- Create GUI
local screenGui = Instance.new("ScreenGui")
screenGui.Name = "BasketballScoreGui"
screenGui.ResetOnSpawn = false
screenGui.Parent = game:GetService("CoreGui")

local textLabel = Instance.new("TextLabel")
textLabel.Parent = screenGui
textLabel.Size = UDim2.new(0, 350, 0, 60)
textLabel.Position = UDim2.new(0.5, -175, 0.05, 0)
textLabel.BackgroundColor3 = Color3.fromRGB(30, 30, 30)
textLabel.TextColor3 = Color3.fromRGB(255, 255, 255)
textLabel.Font = Enum.Font.GothamBold
textLabel.TextSize = 22
textLabel.Text = "🏀 Basketball Score: Loading..."

-- Function to get the new event score
local function getScore()
    for _, v in pairs(getgc(true)) do
        if typeof(v) == "table" and rawget(v, "BasketballRecord2") then
            if v.BasketballRecord2 > 0 then
                return v.BasketballRecord2
            end
        end
    end
    return nil
end

-- Format large number into millions with 2 decimal places
local function formatScore(score)
    local millions = score / 1_000_000
    return string.format("%.2fM", millions)
end

-- Webhook sending function
local function sendWebhook(score)
    local HttpService = game:GetService("HttpService")
    local webhookUrl = "YOUR_WEBHOOK_URL_HERE"

    local data = {
        content = "🚨 **Basketball Score Update!**\n🏀 New High Score: **" .. formatScore(score) .. "**"
    }

    local success, err = pcall(function()
        request({
            Url = webhookUrl,
            Method = "POST",
            Headers = {
                ["Content-Type"] = "application/json"
            },
            Body = HttpService:JSONEncode(data)
        })
    end)

    if success then
        print("✅ Webhook sent for score:", score)
    else
        warn("❌ Webhook failed:", err)
    end
end

-- Track the highest score webhook has been sent for
local lastSentScore = 150_000_000 -- Initial minimum threshold

-- Loop to update every 60 seconds
while true do
    local score = getScore()
    if score then
        textLabel.Text = "🏀 Basketball Score: " .. formatScore(score)
        print("✅ Your Basketball Score (Event 2):", score)

        if score > lastSentScore then
            sendWebhook(score)
            lastSentScore = score
        end
    else
        textLabel.Text = "🏀 Basketball Score: Not Found"
        print("⚠️ Could not find BasketballRecord2")
    end
    wait(60)
end
