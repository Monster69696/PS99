


-- ✅ Wait for game and intro to fully load
repeat task.wait() until game:IsLoaded()
local Players = game:GetService("Players")
local player = Players.LocalPlayer
repeat task.wait() until not player.PlayerGui:FindFirstChild("__INTRO")

-- ✅ Services / Libraries
local ReplicatedStorage = game:GetService("ReplicatedStorage")
local InstancingCmds = require(ReplicatedStorage:WaitForChild("Library"):WaitForChild("Client"):WaitForChild("InstancingCmds"))
local EggCmds = require(ReplicatedStorage.Library.Client.EggCmds)
local Network = require(ReplicatedStorage.Library.Client.Network)
local GetMaxEggsToHatch = EggCmds.GetMaxHatch()

-- ✅ Remote Events
local Train = ReplicatedStorage.Network:WaitForChild("InfiniteGym_Train")
local Start = ReplicatedStorage.Network:WaitForChild("InfiniteGym_Start")
local ZonePurchase = ReplicatedStorage.Network:WaitForChild("InstanceZones_RequestPurchase")
local GymRebirth = ReplicatedStorage.Network:WaitForChild("Gym_Rebirth")

-- ✅ Remove Egg Animation
local EggScript = player.PlayerScripts:WaitForChild("Scripts"):WaitForChild("Game"):WaitForChild("Egg Opening Frontend")
getsenv(EggScript).PlayEggAnimation = function() return end

-- ✅ Enter Gym Event
local function EnterGymEvent()
    setthreadidentity(2)
    pcall(function()
        InstancingCmds.Enter("GymEvent")
    end)
    setthreadidentity(7)
end

EnterGymEvent()
task.wait(3)

-- ✅ Auto buy all zones
task.spawn(function()
    while task.wait(1) do
        for zone = 1, 5 do
            pcall(function()
                ZonePurchase:InvokeServer("GymEvent", zone)
            end)
        end
    end
end)

-- ✅ Auto Rebirth
task.spawn(function()
    while task.wait(1) do
        pcall(function()
            GymRebirth:InvokeServer()
        end)
    end
end)

-- ✅ Auto Start (Infinite Mode)
task.spawn(function()
    while task.wait() do
        pcall(function()
            Start:InvokeServer()
        end)
    end
end)

-- ✅ Auto Train
task.spawn(function()
    while task.wait() do
        pcall(function()
            Train:InvokeServer("Squat")
        end)
    end
end)

-- ✅ Find Nearest Egg
local function find_nearest_egg()
    local nearest, shortest = nil, math.huge
    local folder = workspace:FindFirstChild("__THINGS"):FindFirstChild("CustomEggs")
    local hrp = player.Character and player.Character:FindFirstChild("HumanoidRootPart")
    if not (folder and hrp) then return nil end

    for _, egg in ipairs(folder:GetChildren()) do
        if egg:IsA("Model") then
            local success, box = pcall(function()
                return egg:GetBoundingBox()
            end)
            if success then
                local dist = (hrp.Position - box.Position).Magnitude
                if dist < shortest then
                    nearest = egg.Name
                    shortest = dist
                end
            end
        end
    end

    return nearest
end

-- ✅ Auto Hatch Nearest Egg
_G.AutoOpen = true
task.spawn(function()
    while task.wait() do
        if _G.AutoOpen then
            local egg = find_nearest_egg()
            if egg then
                pcall(function()
                    Network.Invoke("CustomEggs_Hatch", egg, GetMaxEggsToHatch)
                end)
            end
        end
    end
end)
