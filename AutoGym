-- âœ… Wait for game and intro to fully load
repeat task.wait() until game:IsLoaded()
local Players = game:GetService("Players")
local player = Players.LocalPlayer
repeat task.wait() until not player.PlayerGui:FindFirstChild("__INTRO")

-- âœ… Services / Libraries
local ReplicatedStorage = game:GetService("ReplicatedStorage")
local InstancingCmds = require(ReplicatedStorage:WaitForChild("Library"):WaitForChild("Client"):WaitForChild("InstancingCmds"))
local EggCmds = require(ReplicatedStorage.Library.Client.EggCmds)
local Network = require(ReplicatedStorage.Library.Client.Network)
local GetMaxEggsToHatch = EggCmds.GetMaxHatch()

-- âœ… Remote Events
local Train = ReplicatedStorage.Network:WaitForChild("InfiniteGym_Train")
local Start = ReplicatedStorage.Network:WaitForChild("InfiniteGym_Start")
local ZonePurchase = ReplicatedStorage.Network:WaitForChild("InstanceZones_RequestPurchase")
local GymRebirth = ReplicatedStorage.Network:WaitForChild("Gym_Rebirth")

-- âœ… Remove Egg Animation
local EggScript = player.PlayerScripts:WaitForChild("Scripts"):WaitForChild("Game"):WaitForChild("Egg Opening Frontend")
getsenv(EggScript).PlayEggAnimation = function() return end

-- âœ… Enter Gym Event
local function EnterGymEvent()
    setthreadidentity(2)
    pcall(function()
        InstancingCmds.Enter("GymEvent")
    end)
    setthreadidentity(7)
end

EnterGymEvent()
task.wait(3)

-- âœ… Auto buy all zones
task.spawn(function()
    while task.wait(1) do
        for zone = 1, 5 do
            pcall(function()
                ZonePurchase:InvokeServer("GymEvent", zone)
            end)
        end
    end
end)

-- âœ… Auto Rebirth
task.spawn(function()
    while task.wait(1) do
        pcall(function()
            GymRebirth:InvokeServer()
        end)
    end
end)

-- âœ… Auto Start (Infinite Mode)
task.spawn(function()
    while task.wait() do
        pcall(function()
            Start:InvokeServer()
        end)
    end
end)

-- âœ… Auto Train
task.spawn(function()
    while task.wait() do
        pcall(function()
            Train:InvokeServer("Squat")
        end)
    end
end)

-- âœ… Find Nearest Egg
local function find_nearest_egg()
    local nearest, shortest = nil, math.huge
    local folder = workspace:FindFirstChild("__THINGS"):FindFirstChild("CustomEggs")
    local hrp = player.Character and player.Character:FindFirstChild("HumanoidRootPart")
    if not (folder and hrp) then return nil end

    for _, egg in ipairs(folder:GetChildren()) do
        if egg:IsA("Model") then
            local success, box = pcall(function()
                return egg:GetBoundingBox()
            end)
            if success then
                local dist = (hrp.Position - box.Position).Magnitude
                if dist < shortest then
                    nearest = egg.Name
                    shortest = dist
                end
            end
        end
    end

    return nearest
end

-- âœ… Auto Hatch Nearest Egg
_G.AutoOpen = true
task.spawn(function()
    while task.wait() do
        if _G.AutoOpen then
            local egg = find_nearest_egg()
            if egg then
                pcall(function()
                    Network.Invoke("CustomEggs_Hatch", egg, GetMaxEggsToHatch)
                end)
            end
        end
    end
end)

-- âœ… Toggleable Black Screen UI (Battery Saver)
local CoreGui = game:GetService("CoreGui")
local blackScreenGui = Instance.new("ScreenGui")
blackScreenGui.Name = "FullBlackScreenWithToggle"
blackScreenGui.IgnoreGuiInset = true
blackScreenGui.ResetOnSpawn = false
blackScreenGui.ZIndexBehavior = Enum.ZIndexBehavior.Global
blackScreenGui:SetAttribute("Safe", true)
blackScreenGui.Parent = CoreGui

-- ðŸ¥š Auto Hatch Toggle Button
local autoBtn = Instance.new("TextButton")
autoBtn.Text = "ðŸ¥š AUTO HATCH: ON"
autoBtn.Size = UDim2.new(0, 160, 0, 40)
autoBtn.Position = UDim2.new(1, -170, 1, -100)
autoBtn.AnchorPoint = Vector2.new(0, 1)
autoBtn.BackgroundColor3 = Color3.fromRGB(30, 30, 30)
autoBtn.TextColor3 = Color3.new(1, 1, 1)
autoBtn.Font = Enum.Font.GothamBold
autoBtn.TextSize = 14
autoBtn.ZIndex = 10
autoBtn.Parent = blackScreenGui
autoBtn:SetAttribute("Safe", true)

autoBtn.MouseButton1Click:Connect(function()
    _G.AutoOpen = not _G.AutoOpen
    autoBtn.Text = _G.AutoOpen and "ðŸ¥š AUTO HATCH: ON" or "ðŸ¥š AUTO HATCH: OFF"
end)

-- ðŸ”² Fullscreen Black Overlay
local frame = Instance.new("Frame")
frame.BackgroundColor3 = Color3.new(0, 0, 0)
frame.BorderSizePixel = 0
frame.Size = UDim2.new(1, 0, 1, 0)
frame.Visible = false
frame.Parent = blackScreenGui

-- ðŸŸ¢ Black Screen Toggle Button
local toggleBtn = Instance.new("TextButton")
toggleBtn.Text = "ðŸŸ¢ SHOW SCREEN"
toggleBtn.Size = UDim2.new(0, 160, 0, 40)
toggleBtn.Position = UDim2.new(1, -170, 1, -50)
toggleBtn.AnchorPoint = Vector2.new(0, 1)
toggleBtn.BackgroundColor3 = Color3.fromRGB(30, 30, 30)
toggleBtn.TextColor3 = Color3.new(1, 1, 1)
toggleBtn.Font = Enum.Font.GothamBold
toggleBtn.TextSize = 14
toggleBtn.ZIndex = 10
toggleBtn.Parent = blackScreenGui
toggleBtn:SetAttribute("Safe", true)

local isBlack = false
toggleBtn.MouseButton1Click:Connect(function()
	isBlack = not isBlack
	frame.Visible = isBlack
	toggleBtn.Text = isBlack and "ðŸ”´ HIDE SCREEN" or "ðŸŸ¢ SHOW SCREEN"
end)
