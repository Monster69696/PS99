local HttpService = game:GetService("HttpService")
local WEBHOOK_URL = "https://discord.com/api/webhooks/1378878453293650041/4ENx3GlPurpgQxPckeSYplZUurHREcdSejG-pIpYi8lmXuFKr7xxZ7I78IncKX8yX4Ca"

-- ‚úÖ Safe request function
local requestFunc = (syn and syn.request) or (http and http.request) or request or http_request

-- ‚úÖ Send webhook safely
local function sendWebhook(msg)
    if not requestFunc or not WEBHOOK_URL then return end

    local payload = { content = msg }
    local success, result = pcall(function()
        return requestFunc({
            Url = WEBHOOK_URL,
            Method = "POST",
            Headers = {
                ["Content-Type"] = "application/json"
            },
            Body = HttpService:JSONEncode(payload)
        })
    end)

    if not success then
        warn("[Webhook Error]", result)
    end
end

-- ‚úÖ Skip noisy remotes
local skipRemotes = {
    ["Click"] = true,
    ["Send Position"] = true,
    ["SendLikelySpeakingUsers"] = true,
    ["__BLUNDER"] = true,
}

-- ‚úÖ Hook remote calls
local old
old = hookmetamethod(game, "__namecall", newcclosure(function(self, ...)
    local method = getnamecallmethod()
    local args = { ... }

    -- Only track remote calls, ignore caller
    if not checkcaller() and (method == "FireServer" or method == "InvokeServer") then
        local remoteName = tostring(self):match("[^%.]+$") -- last part

        if skipRemotes[remoteName] then
            return old(self, ...)
        end

        local msg = "üì° **Remote Call Detected**\n"
        msg = msg .. "**Remote:** `" .. tostring(self) .. "`\n"
        msg = msg .. "**Method:** `" .. method .. "`"

        for i, v in ipairs(args) do
            local argStr
            local ok, result = pcall(function()
                return HttpService:JSONEncode(v)
            end)
            argStr = ok and result or tostring(v)
            msg = msg .. string.format("\n`Arg %d`: ```%s```", i, argStr)
        end

        sendWebhook(msg)
    end

    return old(self, ...)
end))

-- ‚úÖ Hook errors
game:GetService("LogService").MessageOut:Connect(function(msg, msgType)
    if msgType == Enum.MessageType.MessageError then
        sendWebhook("‚ùå **Error:** " .. msg)
    elseif msgType == Enum.MessageType.MessageWarning then
        sendWebhook("‚ö†Ô∏è **Warning:** " .. msg)
    end
end)

print("‚úÖ Webhook remote logger loaded successfully.")
sendWebhook("‚úÖ Webhook remote logger loaded successfully.")
