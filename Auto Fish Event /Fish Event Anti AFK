local VirtualUser = game:GetService("VirtualUser")
local Players = game:GetService("Players")
local ReplicatedStorage = game:GetService("ReplicatedStorage")

local LocalPlayer = Players.LocalPlayer
local Network = ReplicatedStorage:WaitForChild("Network")

-- Disable old idle connections
for _, v in pairs(getconnections(LocalPlayer.Idled)) do
    v:Disable()
end

-- Connect Anti-AFK function
LocalPlayer.Idled:Connect(function()
    VirtualUser:ClickButton2(Vector2.new(math.random(0, 1000), math.random(0, 1000)))
    print("[Anti-AFK] Simulated click to prevent idle kick.")
end)

-- Hook and block idle-related namecalls
old = hookmetamethod(game, "__namecall", function(self, ...)
    local method = getnamecallmethod()
    if not checkcaller() then
        local Name = tostring(self)
        if table.find({"Server Closing", "Idle Tracking: Update Timer", "Move Server"}, Name) then
            print("[Anti-AFK] Blocked remote:", Name)
            return nil
        end
    end
    return old(self, ...)
end)

-- Fire the stop timer remote
pcall(function()
    Network["Idle Tracking: Stop Timer"]:FireServer()
    print("[Anti-AFK] Fired: Idle Tracking: Stop Timer")
end)

